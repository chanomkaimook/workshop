const myPromise = new Promise((resolve, reject) => {
  setTimeout(() => {
    // resolve("done");
    reject("error");
  }, 1000);
});

/* myPromise.then(
  (result) => alert(result),
  (error) => alert(error)
); */

const loadData = async () => {
  try {
    const url = "https://jsonplaceholder.typicode.com/todos/1";
    const res = await fetch(url);

    /* if(res.ok){
      const data = await res.json();
      console.log(data);
    }else{
      console.log(res.status);
    } */

    const data = await res.json();
    return data;
  } catch (error) {
    console.log(error);
  }
};

// result1
// loadData();

// result2
// const data = loadData().then(data => console.log(data));

//result3
/* (async () => {
  const data = await loadData();
  console.log(data);
})(); */


/* workshop promise all*/
const loadData = async () => {
  try {
    const url1 = "https://jsonplaceholder.typicode.com/todos/1";
    const url2 = "https://jsonplaceholder.typicode.com/todos/2";
    const url3 = "https://jsonplaceholder.typicode.com/todos/3";
    const results = await Promise.all([fetch(url1), fetch(url2), fetch(url3)]);
    const dataProm = await results.map((result) => result.json());
    const finalData = Promise.all(dataProm);

    return finalData;
  } catch (err) {
    console.log(err);
  }
};

const data = loadData().then(data => console.log(data));

